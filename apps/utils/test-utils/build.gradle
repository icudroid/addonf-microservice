import org.gradle.internal.os.OperatingSystem

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}"
        classpath "io.spring.gradle:propdeps-plugin:0.0.9.RELEASE"
        //jhipster-needle-gradle-buildscript-dependency - JHipster will add additional gradle build script plugins here
    }
}

plugins {
    id "org.sonarqube" version "2.5"
    id "net.ltgt.apt" version "0.13"
    id "io.spring.dependency-management" version "1.0.3.RELEASE"
    id "com.github.lkishalmi.gatling" version "0.7.1"
    //jhipster-needle-gradle-plugins - JHipster will add additional gradle plugins here
}

apply plugin: 'java'
sourceCompatibility=1.8
targetCompatibility=1.8
// Until JHipster supports JDK 9
assert System.properties['java.specification.version'] == '1.8'

apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'propdeps'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'

dependencyManagement {
    imports {
        mavenBom 'io.github.jhipster:jhipster-dependencies:' + jhipster_dependencies_version
        //jhipster-needle-gradle-dependency-management - JHipster will add additional dependencies management here
    }
}

group = 'com.adloveyou.ms'
version = '0.0.1-SNAPSHOT'

description = ''

bootRepackage {
    enabled = false;
}

test {


    // uncomment if the tests reports are not generated
    // see https://github.com/jhipster/generator-jhipster/pull/2771 and https://github.com/jhipster/generator-jhipster/pull/4484
    // ignoreFailures true
    reports.html.enabled = false
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn test
}

//jhipster-needle-gradle-apply-from - JHipster will add additional gradle scripts to be applied here

repositories {
    mavenLocal()
    jcenter()
}

dependencies {

    compile ("org.springframework.boot:spring-boot-starter-web") {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile "org.springframework:spring-context-support"

    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    compile "com.fasterxml.jackson.core:jackson-annotations"
    compile "com.fasterxml.jackson.core:jackson-databind"
    compile "org.assertj:assertj-core"
    compile "junit:junit"
    compile "org.hamcrest:hamcrest-library"

}

task cleanResources(type: Delete) {
    delete 'build/resources'
}


task stage(dependsOn: 'bootRepackage') {
}

compileJava.dependsOn processResources
processResources.dependsOn cleanResources
